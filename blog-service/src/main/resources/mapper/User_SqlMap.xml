<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pong.blog.service.mapper.UserDAO" >
  <resultMap id="BaseResultMap" type="com.pong.blog.model.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="login" property="login" jdbcType="VARCHAR" />
    <result column="pass" property="pass" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="registered" property="registered" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="display_name" property="displayName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, login, pass, nick_name, email, url, registered, status, display_name, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.pong.blog.model.User" >
    insert into users (login, pass, 
      nick_name, email, url, 
      registered, status, display_name, 
      create_time, update_time)
    values ( #{login,jdbcType=VARCHAR}, #{pass,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{registered,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{displayName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.pong.blog.model.User" >
    update users
    set login = #{login,jdbcType=VARCHAR},
      pass = #{pass,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      registered = #{registered,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      display_name = #{displayName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>