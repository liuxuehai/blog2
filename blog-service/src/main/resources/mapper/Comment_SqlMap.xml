<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pong.blog.service.mapper.CommentDAO" >
  <resultMap id="BaseResultMap" type="com.pong.blog.model.Comment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="post_id" property="postId" jdbcType="BIGINT" />
    <result column="author_id" property="authorId" jdbcType="BIGINT" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="agent" property="agent" jdbcType="VARCHAR" />
    <result column="approved" property="approved" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="parent" property="parent" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pong.blog.model.Comment" extends="BaseResultMap" >
    <result column="context" property="context" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, post_id, author_id, ip, date, agent, approved, type, parent, user_id, create_time, 
    update_time
  </sql>
  <sql id="Blob_Column_List" >
    context
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from comments
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.pong.blog.model.Comment" >
    insert into comments (post_id, author_id, 
      ip, date, agent, 
      approved, type, parent, 
      user_id, create_time, update_time, 
      context)
    values ( #{postId,jdbcType=BIGINT}, #{authorId,jdbcType=BIGINT}, 
      #{ip,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, #{agent,jdbcType=VARCHAR}, 
      #{approved,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{parent,jdbcType=BIGINT}, 
      #{userId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{context,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pong.blog.model.Comment" >
    update comments
    set post_id = #{postId,jdbcType=BIGINT},
      author_id = #{authorId,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      agent = #{agent,jdbcType=VARCHAR},
      approved = #{approved,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      parent = #{parent,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      context = #{context,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pong.blog.model.Comment" >
    update comments
    set post_id = #{postId,jdbcType=BIGINT},
      author_id = #{authorId,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      agent = #{agent,jdbcType=VARCHAR},
      approved = #{approved,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      parent = #{parent,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>